# tye application configuration file
# read all about it at https://github.com/dotnet/tye
#
# when you've given us a try, we'd love to know what you think:
#    https://aka.ms/AA7q20u
#
name: hellosecuredistributedapplication
services:
- name: auth-server
  image: quay.io/keycloak/keycloak
  args: start-dev
  env:
    - name: KEYCLOAK_ADMIN
      value: admin
    - name: KEYCLOAK_ADMIN_PASSWORD
      value: admin
  bindings:
    - name: auth-server-http
      protocol: http
      port: 8080
      containerPort: 8080

- name: business-partners-db
  image: postgres:14.4
  env:
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      value: password
    - name: POSTGRES_DB
      value: business_partners
  bindings:
    - port: 54321
      containerPort: 5432
      connectionString: Server=${host};Port=${port};User Id=${env:POSTGRES_USER};Password=${env:POSTGRES_PASSWORD};
- name: fleet-db
  image: postgres:14.4
  env:
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      value: password
    - name: POSTGRES_DB
      value: fleet
  bindings:
    - port: 54322
      containerPort: 5432
      connectionString: Server=${host};Port=${port};User Id=${env:POSTGRES_USER};Password=${env:POSTGRES_PASSWORD};
- name: tenants-db
  image: postgres:14.4
  env:
    - name: POSTGRES_USER
      value: postgres
    - name: POSTGRES_PASSWORD
      value: password
    - name: POSTGRES_DB
      value: tenants
  bindings:
    - port: 54323
      containerPort: 5432
      connectionString: Server=${host};Port=${port};User Id=${env:POSTGRES_USER};Password=${env:POSTGRES_PASSWORD};

- name: businesspartners-api
  project: backend/BusinessPartners.Api/BusinessPartners.Api.csproj
- name: fleet-api
  project: backend/Fleet.Api/Fleet.Api.csproj
- name: tenants-api
  project: backend/Tenants.Api/Tenants.Api.csproj


- name: businesspartners
  dockerFile: frontend/react-app/Dockerfile
  bindings:
    - protocol: http
      containerPort: 80
      port: 8881
- name: fleet
  dockerFile: frontend/angular-app/Dockerfile
  bindings:
    - protocol: http
      containerPort: 80
      port: 8880
